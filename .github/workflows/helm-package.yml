name: Package and Release Helm Charts

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      chart_version:
        description: 'Chart version to release'
        required: false
        type: string

jobs:
  package-helm-charts:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.14.0

    - name: Determine version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.chart_version }}" != "" ]]; then
          echo "version=${{ inputs.chart_version }}" >> $GITHUB_OUTPUT
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          TAG=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG" >> $GITHUB_OUTPUT
        else
          # Use current version + build number for main branch
          CURRENT_VERSION=$(grep 'version:' deployments/helm-standalone/Chart.yaml | cut -d' ' -f2)
          BUILD_VERSION="${CURRENT_VERSION}-build.${{ github.run_number }}"
          echo "version=$BUILD_VERSION" >> $GITHUB_OUTPUT
        fi

    - name: Update Chart Versions
      run: |
        VERSION=${{ steps.version.outputs.version }}
        echo "Updating charts to version: $VERSION"
        
        # Update helm-standalone chart
        sed -i "s/version: .*/version: $VERSION/" deployments/helm-standalone/Chart.yaml
        sed -i "s/appVersion: .*/appVersion: \"$VERSION\"/" deployments/helm-standalone/Chart.yaml
        
        # Update helm-for-kof chart  
        sed -i "s/version: .*/version: $VERSION/" deployments/helm-for-kof/Chart.yaml
        sed -i "s/appVersion: .*/appVersion: \"$VERSION\"/" deployments/helm-for-kof/Chart.yaml

    - name: Package Helm Charts
      run: |
        mkdir -p charts
        
        # Package helm-standalone
        helm package deployments/helm-standalone -d charts
        
        # Package helm-for-kof
        helm package deployments/helm-for-kof -d charts
        
        ls -la charts/

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Charts to GHCR
      run: |
        VERSION=${{ steps.version.outputs.version }}
        
        # Push helm-standalone chart
        helm push charts/finops-agent-$VERSION.tgz oci://ghcr.io/${{ github.repository_owner }}/charts
        
        # Push helm-for-kof chart
        helm push charts/finops-agent-kof-$VERSION.tgz oci://ghcr.io/${{ github.repository_owner }}/charts
        
        # Tag as latest for main branch and tags
        if [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == refs/tags/* ]]; then
          echo "Tagging charts as latest..."
          helm push charts/finops-agent-$VERSION.tgz oci://ghcr.io/${{ github.repository_owner }}/charts --version latest
          helm push charts/finops-agent-kof-$VERSION.tgz oci://ghcr.io/${{ github.repository_owner }}/charts --version latest
        fi

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        files: charts/*.tgz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
